package components

import (
	"github.com/RossHammer/go-todo/db"
	"github.com/RossHammer/go-todo/util"
)

templ TodoPage(todos []db.Todo) {
	@page("TODO") {
		<div class="min-h-screen bg-neutral">
			<div class="flex flex-col gap-8 justify-center py-4 sm:px-6 lg:px-8">
				<div class="text-center sm:mx-auto sm:w-full sm:max-w-md">
					<h1 class="text-3xl font-extrabold">TODO List</h1>
				</div>
				<div class="sm:mx-auto sm:w-full sm:max-w-md">
					<div class="bg-base-100 p-4 sm:rounded-lg sm:px-10 sm:shadow flex flex-col gap-4">
						<ul id="todos">
							for _, item:= range todos {
								@TodoItem(item)
							}
						</ul>
						@addTodoForm(nil)
					</div>
				</div>
			</div>
		</div>
	}
}

templ TodoItem(todo db.Todo) {
	<li hx-target="closest li" hx-swap="outerHTML">
		<div class="flex flex-row items-center py-0.5 gap-2">
			<input hx-post={ buildUrl("/update/%d?Completed=%v", todo.ID, !todo.Completed) } type="checkbox" title="Completed" class="checkbox" checked?={ todo.Completed }/>
			<span class={ templ.KV("line-through", todo.Completed) }>{ todo.Title }</span>
			<button hx-delete={ buildUrl("/delete/%d", todo.ID) } hx-swap="delete" class="btn btn-error btn-square btn-xs">[X]</button>
		</div>
	</li>
}

templ addTodoForm(validation []util.FieldError) {
	<form hx-post={ buildUrl("/add") } hx-target="#todos" hx-swap="beforeend" hx-on::after-request="this.reset()" class="join">
		<input type="text" name="Title" class="input input-bordered join-item w-full" placeholder="new todo" required/>
		<button type="submit" class="btn btn-primary join-item">Add</button>
		for _, e:= range validation {
			<p>{ e.Message }</p>
		}
	</form>
}
